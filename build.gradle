import java.text.SimpleDateFormat

plugins {
    id 'application'
    id 'maven-publish'
}

group 'com.reportmill'
version new SimpleDateFormat("yyyy.MM").format(new Date())

sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['src']

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

repositories {
    mavenCentral()
}

dependencies {

    // SnapKit project
    implementation project(':SnapKit')

    // SnapKitGL project
    implementation project(':SnapKitGL')

    // SnapBuilder project
    implementation project(':SnapBuilder')

    // JGit
    implementation 'org.eclipse.jgit:org.eclipse.jgit:7.3.0.202506031305-r'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.slf4j:slf4j-simple:1.7.36'

    // Greenfoot
    implementation project(':Greenfoot')
}

mainClassName = 'snapcode.app.App'

/**
 * Custom task to build jar that includes all dependencies.
 */
task buildFullJar(type: Jar) {
    archiveBaseName = 'SnapCodeAll'
    manifest {
        attributes(
                'Main-Class': 'snapcode.app.App',
                'Application-Name': 'SnapCode',
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude('**/test/**', '/META-INF/*.SF', '/META-INF/*.RSA', '/com/teamdev/**') //, '**/org/**', '**/sun/**')
    processResources { finalizedBy ('buildInfo') }
    with jar
    dependsOn build
    duplicatesStrategy = DuplicatesStrategy.WARN
}

task copyCJ(type: Copy) {
    from (
            "../WebAPI/cjdom.js",
            "../WebAPI/build/libs/WebAPI-" + new SimpleDateFormat("yyyy.MM").format(new Date()) + ".jar",
            "../SnapCJ/build/libs/SnapCJ-" + new SimpleDateFormat("yyyy.MM").format(new Date()) + ".jar",
            "../SnapKit/build/libs/SnapKit-" + new SimpleDateFormat("yyyy.MM").format(new Date()) + ".jar",
            "../SnapBuilder/build/libs/SnapBuilder-" + new SimpleDateFormat("yyyy.MM").format(new Date()) + ".jar",
            "../Greenfoot/build/libs/Greenfoot-" + new SimpleDateFormat("yyyy.MM").format(new Date()) + ".jar"
    )
    into "build/libs"
    dependsOn buildFullJar

    // Declare that this task depends on the 'jar' task of WebAPI, SnapCJ
    dependsOn(":WebAPI:jar", ":SnapCJ:jar")
}

task copyGT(type: Copy) {
    from (
            "../SnapCode/build/classes/java/main/GitTest.class"
    )
    into "build/libs"
    dependsOn build
}

/**
 * Writes the current build date into BuildInfo.txt, e.g.: Feb-02-23 09:31.
 */
tasks.register('buildInfo') {
    doLast {

        // Create BuildInfo text (date string) and write to file
        String buildInfoText = new SimpleDateFormat("MMM-dd-yy HH:mm").format(new Date());
        String buildInfoFilePathStr = buildDir.getAbsolutePath() + '/resources/main/snapcode/BuildInfo.txt';
        java.nio.file.Path buildInfoFilePath = java.nio.file.Paths.get(buildInfoFilePathStr);
        java.nio.file.Files.write(buildInfoFilePath, buildInfoText.getBytes());
    }
}

publishing {

    publications {
        gpr(MavenPublication) {
            artifactId 'SnapCodeAll'
            artifact buildFullJar // from(components.java)
            pom.withXml {
                asNode().dependencies.dependency.each { dep -> dep.parent().remove(dep) }
            }
        }
    }
}

task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs-all'
}
